// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Tweetwatch Server",
    "version": "0.0.1"
  },
  "paths": {
    "/account": {
      "get": {
        "security": [
          {
            "isRegistered": []
          }
        ],
        "operationId": "account",
        "responses": {
          "200": {
            "description": "Returns info about current user",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "security": [
          {
            "isRegistered": []
          }
        ],
        "operationId": "login",
        "responses": {
          "200": {
            "description": "Log In",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "security": [],
        "operationId": "signup",
        "parameters": [
          {
            "description": "New User",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "422": {
            "description": "Email already taken",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic": {
      "post": {
        "operationId": "createTopic",
        "parameters": [
          {
            "description": "New Topic",
            "name": "topic",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTopicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Topic created",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateTopicRequest": {
      "required": [
        "name",
        "track"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "track": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "GeneralResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Token": {
      "required": [
        "user",
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "Topic": {
      "required": [
        "id",
        "name",
        "track"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "track": {
          "type": "string"
        }
      }
    },
    "UserRequest": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "UserResponse": {
      "required": [
        "id",
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "isRegistered": {
      "type": "basic"
    }
  },
  "security": [
    {
      "isRegistered": []
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Tweetwatch Server",
    "version": "0.0.1"
  },
  "paths": {
    "/account": {
      "get": {
        "security": [
          {
            "isRegistered": []
          }
        ],
        "operationId": "account",
        "responses": {
          "200": {
            "description": "Returns info about current user",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "security": [
          {
            "isRegistered": []
          }
        ],
        "operationId": "login",
        "responses": {
          "200": {
            "description": "Log In",
            "schema": {
              "$ref": "#/definitions/Token"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/signup": {
      "post": {
        "security": [],
        "operationId": "signup",
        "parameters": [
          {
            "description": "New User",
            "name": "user",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User created",
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          },
          "422": {
            "description": "Email already taken",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "default": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/topic": {
      "post": {
        "operationId": "createTopic",
        "parameters": [
          {
            "description": "New Topic",
            "name": "topic",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTopicRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Topic created",
            "schema": {
              "$ref": "#/definitions/Topic"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "CreateTopicRequest": {
      "required": [
        "name",
        "track"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "track": {
          "type": "string"
        }
      }
    },
    "ErrorResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "GeneralResponse": {
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Token": {
      "required": [
        "user",
        "token"
      ],
      "properties": {
        "token": {
          "type": "string"
        },
        "user": {
          "type": "string"
        }
      }
    },
    "Topic": {
      "required": [
        "id",
        "name",
        "track"
      ],
      "properties": {
        "id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "track": {
          "type": "string"
        }
      }
    },
    "UserRequest": {
      "required": [
        "email",
        "password"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string",
          "format": "password"
        }
      }
    },
    "UserResponse": {
      "required": [
        "id",
        "email"
      ],
      "properties": {
        "email": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        }
      }
    }
  },
  "securityDefinitions": {
    "isRegistered": {
      "type": "basic"
    }
  },
  "security": [
    {
      "isRegistered": []
    }
  ]
}`))
}
