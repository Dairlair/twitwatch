// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/dairlair/tweetwatch/pkg/api/models"
)

// GetStreamsOKCode is the HTTP code returned for type GetStreamsOK
const GetStreamsOKCode int = 200

/*GetStreamsOK Streams list

swagger:response getStreamsOK
*/
type GetStreamsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Stream `json:"body,omitempty"`
}

// NewGetStreamsOK creates GetStreamsOK with default headers values
func NewGetStreamsOK() *GetStreamsOK {

	return &GetStreamsOK{}
}

// WithPayload adds the payload to the get streams o k response
func (o *GetStreamsOK) WithPayload(payload []*models.Stream) *GetStreamsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get streams o k response
func (o *GetStreamsOK) SetPayload(payload []*models.Stream) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStreamsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Stream, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

/*GetStreamsDefault Error

swagger:response getStreamsDefault
*/
type GetStreamsDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.DefaultError `json:"body,omitempty"`
}

// NewGetStreamsDefault creates GetStreamsDefault with default headers values
func NewGetStreamsDefault(code int) *GetStreamsDefault {
	if code <= 0 {
		code = 500
	}

	return &GetStreamsDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get streams default response
func (o *GetStreamsDefault) WithStatusCode(code int) *GetStreamsDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get streams default response
func (o *GetStreamsDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get streams default response
func (o *GetStreamsDefault) WithPayload(payload *models.DefaultError) *GetStreamsDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get streams default response
func (o *GetStreamsDefault) SetPayload(payload *models.DefaultError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetStreamsDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
