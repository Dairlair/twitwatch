// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/dairlair/tweetwatch/pkg/api/models"
)

// DeleteTopicOKCode is the HTTP code returned for type DeleteTopicOK
const DeleteTopicOKCode int = 200

/*DeleteTopicOK Topic deleted

swagger:response deleteTopicOK
*/
type DeleteTopicOK struct {

	/*
	  In: Body
	*/
	Payload *models.DefaultSuccess `json:"body,omitempty"`
}

// NewDeleteTopicOK creates DeleteTopicOK with default headers values
func NewDeleteTopicOK() *DeleteTopicOK {

	return &DeleteTopicOK{}
}

// WithPayload adds the payload to the delete topic o k response
func (o *DeleteTopicOK) WithPayload(payload *models.DefaultSuccess) *DeleteTopicOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete topic o k response
func (o *DeleteTopicOK) SetPayload(payload *models.DefaultSuccess) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTopicOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*DeleteTopicDefault Error

swagger:response deleteTopicDefault
*/
type DeleteTopicDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.DefaultError `json:"body,omitempty"`
}

// NewDeleteTopicDefault creates DeleteTopicDefault with default headers values
func NewDeleteTopicDefault(code int) *DeleteTopicDefault {
	if code <= 0 {
		code = 500
	}

	return &DeleteTopicDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the delete topic default response
func (o *DeleteTopicDefault) WithStatusCode(code int) *DeleteTopicDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the delete topic default response
func (o *DeleteTopicDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the delete topic default response
func (o *DeleteTopicDefault) WithPayload(payload *models.DefaultError) *DeleteTopicDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete topic default response
func (o *DeleteTopicDefault) SetPayload(payload *models.DefaultError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteTopicDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
