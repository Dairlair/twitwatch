// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/dairlair/tweetwatch/pkg/api/models"
)

// UpdateTopicOKCode is the HTTP code returned for type UpdateTopicOK
const UpdateTopicOKCode int = 200

/*UpdateTopicOK Topic updated

swagger:response updateTopicOK
*/
type UpdateTopicOK struct {

	/*
	  In: Body
	*/
	Payload *models.Topic `json:"body,omitempty"`
}

// NewUpdateTopicOK creates UpdateTopicOK with default headers values
func NewUpdateTopicOK() *UpdateTopicOK {

	return &UpdateTopicOK{}
}

// WithPayload adds the payload to the update topic o k response
func (o *UpdateTopicOK) WithPayload(payload *models.Topic) *UpdateTopicOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update topic o k response
func (o *UpdateTopicOK) SetPayload(payload *models.Topic) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTopicOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*UpdateTopicDefault Error

swagger:response updateTopicDefault
*/
type UpdateTopicDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewUpdateTopicDefault creates UpdateTopicDefault with default headers values
func NewUpdateTopicDefault(code int) *UpdateTopicDefault {
	if code <= 0 {
		code = 500
	}

	return &UpdateTopicDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the update topic default response
func (o *UpdateTopicDefault) WithStatusCode(code int) *UpdateTopicDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the update topic default response
func (o *UpdateTopicDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the update topic default response
func (o *UpdateTopicDefault) WithPayload(payload *models.ErrorResponse) *UpdateTopicDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the update topic default response
func (o *UpdateTopicDefault) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *UpdateTopicDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
