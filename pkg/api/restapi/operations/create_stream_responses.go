// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/dairlair/tweetwatch/pkg/api/models"
)

// CreateStreamOKCode is the HTTP code returned for type CreateStreamOK
const CreateStreamOKCode int = 200

/*CreateStreamOK Stream created

swagger:response createStreamOK
*/
type CreateStreamOK struct {

	/*
	  In: Body
	*/
	Payload *models.Stream `json:"body,omitempty"`
}

// NewCreateStreamOK creates CreateStreamOK with default headers values
func NewCreateStreamOK() *CreateStreamOK {

	return &CreateStreamOK{}
}

// WithPayload adds the payload to the create stream o k response
func (o *CreateStreamOK) WithPayload(payload *models.Stream) *CreateStreamOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stream o k response
func (o *CreateStreamOK) SetPayload(payload *models.Stream) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStreamOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateStreamDefault Error

swagger:response createStreamDefault
*/
type CreateStreamDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.DefaultError `json:"body,omitempty"`
}

// NewCreateStreamDefault creates CreateStreamDefault with default headers values
func NewCreateStreamDefault(code int) *CreateStreamDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateStreamDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create stream default response
func (o *CreateStreamDefault) WithStatusCode(code int) *CreateStreamDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create stream default response
func (o *CreateStreamDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create stream default response
func (o *CreateStreamDefault) WithPayload(payload *models.DefaultError) *CreateStreamDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create stream default response
func (o *CreateStreamDefault) SetPayload(payload *models.DefaultError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateStreamDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
